<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>[Laravel]@程式編寫規範</title>
      <link href="/2019/07/25/Laravel-%E7%A8%8B%E5%BC%8F%E7%B7%A8%E5%AF%AB%E8%A6%8F%E7%AF%84/"/>
      <url>/2019/07/25/Laravel-%E7%A8%8B%E5%BC%8F%E7%B7%A8%E5%AF%AB%E8%A6%8F%E7%AF%84/</url>
      
        <content type="html"><![CDATA[<h2 id="User-Story"><a href="#User-Story" class="headerlink" title="User Story"></a>User Story</h2><p>我想要提昇PHP技術能，所以就先從 Coding Standard 開始</p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>一個產品可能會有多人維護，或是臨時加人進行開發，這時侯 coding style 就是非常重要，<br>會影響到另外的人如何快速的了解程式邏輯，而不讓專案開發時間延遲。 </p><p>coding standard 基本上就是一種寫作格式的風格，像是一些命名的格式、空格要怎樣空、一行最多多少字母、哪些地方要註解、註解的格式等等一些細節的東西。<br>有很多是習慣，也有一些在提昇品質上會有一定幫助，或是在某些地方對專案管理有些幫助等等。</p><p>好用的功能造就優秀的軟體，高水準的程式碼品質造就偉大的軟體。要讓我們的產品從優質進步到偉大，我們必須專注在外人看不到的苦工上，讓軟體更健壯、好維護。<br>編碼標準是軟體工程中的重要組成部分，用以規範工程師的寫作、排版與命名，並保持一致性，使程式碼可讀性提高，讓軟體易於維護。</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="開一個Laravel-5-8專案"><a href="#開一個Laravel-5-8專案" class="headerlink" title="開一個Laravel 5.8專案"></a>開一個Laravel 5.8專案</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ composer create-project laravel/laravel local-example.com</span><br></pre></td></tr></table></figure><h3 id="Require-PHP-CodeSniffer"><a href="#Require-PHP-CodeSniffer" class="headerlink" title="Require PHP CodeSniffer"></a>Require PHP CodeSniffer</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer require --dev squizlabs/php_codesniffer</span><br></pre></td></tr></table></figure><h3 id="PHPCS-Config-Create-phpcs-xml"><a href="#PHPCS-Config-Create-phpcs-xml" class="headerlink" title="PHPCS Config  Create phpcs.xml"></a>PHPCS Config  Create phpcs.xml</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot;?&gt;</span><br><span class="line">&lt;ruleset name=&quot;PSR2&quot;&gt;    </span><br><span class="line">    &lt;description&gt;The PSR2 coding standard.&lt;/description&gt;    </span><br><span class="line">    &lt;rule ref=&quot;PSR2&quot;/&gt;     </span><br><span class="line">    &lt;file&gt;app/&lt;/file&gt;   </span><br><span class="line">    &lt;file&gt;config/&lt;/file&gt;</span><br><span class="line">    &lt;file&gt;routes/&lt;/file&gt;  </span><br><span class="line">    &lt;exclude-pattern&gt;vendor&lt;/exclude-pattern&gt;    </span><br><span class="line">    &lt;exclude-pattern&gt;resources&lt;/exclude-pattern&gt;    </span><br><span class="line">    &lt;exclude-pattern&gt;database/&lt;/exclude-pattern&gt;    </span><br><span class="line">    &lt;exclude-pattern&gt;storage/&lt;/exclude-pattern&gt;    </span><br><span class="line">    &lt;exclude-pattern&gt;node_modules/&lt;/exclude-pattern&gt;</span><br><span class="line">    &lt;exclude-pattern&gt;tests/&lt;/exclude-pattern&gt;</span><br><span class="line">&lt;/ruleset&gt;</span><br></pre></td></tr></table></figure><h3 id="Create-sample-HelloController-and-check-HelloController"><a href="#Create-sample-HelloController-and-check-HelloController" class="headerlink" title="Create sample HelloController and check HelloController"></a>Create sample HelloController and check HelloController</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./vendor/bin/phpcs app/Http/Controllers/HelloController.php</span><br></pre></td></tr></table></figure><h3 id="If-Found-Errors-You-Can-run-phpcbf-fix"><a href="#If-Found-Errors-You-Can-run-phpcbf-fix" class="headerlink" title="If Found Errors. You Can run phpcbf fix"></a>If Found Errors. You Can run phpcbf fix</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./vendor/bin/phpcbf app/Http/Controllers/HelloController.php</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Laravel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[PHP]@設計模式筆記</title>
      <link href="/2019/07/12/PHP-%E8%A8%AD%E8%A8%88%E6%A8%A1%E5%BC%8F%E7%AD%86%E8%A8%98/"/>
      <url>/2019/07/12/PHP-%E8%A8%AD%E8%A8%88%E6%A8%A1%E5%BC%8F%E7%AD%86%E8%A8%98/</url>
      
        <content type="html"><![CDATA[<h2 id="User-Story"><a href="#User-Story" class="headerlink" title="User Story"></a>User Story</h2><p>為什麼要使用設計模式?<br>為了有效於溝通，數學公司套用在不同的數學問題上 .</p><hr><h2 id="物件道向設計原則-S-O-L-I-D"><a href="#物件道向設計原則-S-O-L-I-D" class="headerlink" title="物件道向設計原則 S.O.L.I.D"></a>物件道向設計原則 S.O.L.I.D</h2><ul><li><p>SRP: Single Responsibility Principle (單一職責原則)</p><blockquote><p>讓類別只有一個職責，不要貪方便讓類別擁有很多責任</p></blockquote></li><li><p>OCP: Open Closed Principle (開放封閉原則)</p><blockquote><p>擴展是開放的，修改是封閉的，但不要過度用繼承的方式</p><blockquote><p>Ex: 一個網站的註冊類別，是有不同方式註冊，可抽換成 Interface</p></blockquote></blockquote></li><li><p>LSP: Liskov Substitution Principle (里氏替換原則)</p><blockquote><p>Interface 契約不可被破壞</p></blockquote></li><li><p>LKP: Least Knowledge Principle (最小知識原則)</p><blockquote><p>減少耦合度，多一點封裝</p></blockquote></li><li><p>ISP: Interface Segregation Principle (介面隔離原則)</p><blockquote><p>把 Interface 當成是可以做什麼，而不是是一個什麼</p></blockquote></li><li><p>DIP: Dependency Inversion Principle (依賴反轉原則)</p><blockquote><p>不要把程式寫在某程實作上.</p><blockquote><p>Ex: 一個網站的註冊 / 登入有許多種方式(Facebook、Google、Line等)，把互動的部份交給抽象類別或介面.</p></blockquote></blockquote></li></ul><hr><h2 id="PHP-設計模式"><a href="#PHP-設計模式" class="headerlink" title="PHP 設計模式"></a>PHP 設計模式</h2><ul><li><p>策略模式: 把行為抽換</p><blockquote><p>出現 switch case 時可定義 Interface</p></blockquote></li><li><p>簡單工廠模式: 代替new操作的一種模式</p><blockquote><p>想要更改所例項化的類名等，則只需更改該工廠方法內容即可，不需逐一尋找程式碼中具體例項化的地方（new處）修改了，減少了耦合</p></blockquote></li><li><p>轉接器模式: 把不相容的 Api 封裝</p><blockquote><p>Ex: 輸出報表，格式多元化(Excel、PDF)</p></blockquote></li><li><p>裝飾者模式: 外開公開 Api 的方法</p><blockquote><p>不要在原本的物件加上方法，而是在原有的方法加入額外行為</p></blockquote></li><li><p>責任鍊模式: 每一關都有它的責任</p><blockquote><p>出現 if….elseif…..else…….太多條件時，就可以把 if…..else 物件化</p></blockquote></li><li><p>複合模式: 用很多模式組合起來的</p><blockquote><p>MVC(model-view-controller)，就是最佳代表</p></blockquote></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Laravel </tag>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[Tools]@客制化 command line 環境</title>
      <link href="/2019/07/08/Tools-%E5%AE%A2%E5%88%B6%E5%8C%96-command-line-%E7%92%B0%E5%A2%83/"/>
      <url>/2019/07/08/Tools-%E5%AE%A2%E5%88%B6%E5%8C%96-command-line-%E7%92%B0%E5%A2%83/</url>
      
        <content type="html"><![CDATA[<h2 id="User-Story"><a href="#User-Story" class="headerlink" title="User Story"></a>User Story</h2><p>我是一個開發者，我想要一個客制化的 command line 環境，加快開發速度. </p><h3 id="MacOS-Draculatheme-iTerm-2-Oh-My-Zsh-Nerd-Fonts-Powerlevel9k-設定"><a href="#MacOS-Draculatheme-iTerm-2-Oh-My-Zsh-Nerd-Fonts-Powerlevel9k-設定" class="headerlink" title="MacOS + Draculatheme + iTerm 2 + Oh My Zsh + Nerd-Fonts + Powerlevel9k 設定"></a>MacOS + Draculatheme + iTerm 2 + Oh My Zsh + Nerd-Fonts + Powerlevel9k 設定</h3><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Install-Homebrew"><a href="#Install-Homebrew" class="headerlink" title="Install Homebrew"></a>Install Homebrew</h3><p><a href="https://brew.sh/index_zh-tw" target="_blank" rel="noopener">Homebrew 網址</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># /usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</span><br></pre></td></tr></table></figure><h3 id="Install-Git"><a href="#Install-Git" class="headerlink" title="Install Git"></a>Install Git</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># brew install git</span><br></pre></td></tr></table></figure><h3 id="Install-iterm2"><a href="#Install-iterm2" class="headerlink" title="Install iterm2"></a>Install iterm2</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># brew cask install iterm2</span><br></pre></td></tr></table></figure><h3 id="Instll-Draculatheme-for-iterm2"><a href="#Instll-Draculatheme-for-iterm2" class="headerlink" title="Instll Draculatheme for iterm2"></a>Instll Draculatheme for iterm2</h3><p><a href="https://draculatheme.com/iterm/" target="_blank" rel="noopener">Draculatheme 網址</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git clone https://github.com/dracula/iterm.git</span><br></pre></td></tr></table></figure><p><strong>Activating theme</strong></p><ul><li>iTerm2 &gt; Preferences &gt; Profiles &gt; Colors Tab</li><li>Open the Color Presets… drop-down in the bottom right corner</li><li>Select Import… from the list</li><li>Select the Dracula.itermcolors file</li><li>Select the Dracula from Color Presets…<img src="/images/article/draculatheme.png" class="[class names]"></li></ul><h3 id="Install-zsh"><a href="#Install-zsh" class="headerlink" title="Install zsh"></a>Install zsh</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># brew install zsh zsh-completions</span><br></pre></td></tr></table></figure><h3 id="Install-oh-my-zsh"><a href="#Install-oh-my-zsh" class="headerlink" title="Install oh-my-zsh"></a>Install oh-my-zsh</h3><p><a href="https://ohmyz.sh" target="_blank" rel="noopener">oh-my-zsh 網址</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># sh -c &quot;$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&quot;</span><br></pre></td></tr></table></figure><h3 id="Install-Nerd-Fonts"><a href="#Install-Nerd-Fonts" class="headerlink" title="Install Nerd-Fonts"></a>Install Nerd-Fonts</h3><p><a href="https://github.com/ryanoasis/nerd-fonts#font-installation" target="_blank" rel="noopener">Nerd-Fonts 網址</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># brew tap homebrew/cask-fonts</span><br><span class="line"># brew cask install font-hack-nerd-font</span><br></pre></td></tr></table></figure><p><strong>Activating font</strong></p><ul><li>iTerm2 &gt; Preferences &gt; Profiles &gt; Text</li><li>Font Open the Change Font… drop-down in Hack Regular Nerd Font Complete</li><li>Select Use a different font for non-ASCII text</li><li>Non-ASCII Font Open the Change Font… drop-down in Hack Regular Nerd Font Complete<img src="/images/article/nerd-fonts.png" class="[class names]"></li></ul><h3 id="Install-Powerlevel9K"><a href="#Install-Powerlevel9K" class="headerlink" title="Install Powerlevel9K"></a>Install Powerlevel9K</h3><p><a href="https://github.com/bhilburn/powerlevel9k" target="_blank" rel="noopener">Powerlevel9K 網址</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git clone https://github.com/bhilburn/powerlevel9k.git ~/.oh-my-zsh/custom/themes/powerlevel9k</span><br></pre></td></tr></table></figure><h3 id="Change-zsh"><a href="#Change-zsh" class="headerlink" title="Change .zsh"></a>Change .zsh</h3><script src="//gist.github.com/09ed696d593ed9d30e2a0c234e76435c.js?file=powerlevel9k-zsh-gray.md"></script><script src="//gist.github.com/09ed696d593ed9d30e2a0c234e76435c.js?file=powerlevel9k-zsh-pink.md"></script><h3 id="Change-bashrc"><a href="#Change-bashrc" class="headerlink" title="Change .bashrc"></a>Change .bashrc</h3><script src="//gist.github.com/ce0f41db3ca7676cd4c4103e473c4c8b.js?file=bashrc.md"></script><h3 id="Change-vimrc"><a href="#Change-vimrc" class="headerlink" title="Change .vimrc"></a>Change .vimrc</h3><script src="//gist.github.com/ce0f41db3ca7676cd4c4103e473c4c8b.js?file=vimrc.md"></script>]]></content>
      
      
      
        <tags>
            
            <tag> Tools </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[Laravel]@第一個package</title>
      <link href="/2019/07/08/Laravel-%E7%AC%AC%E4%B8%80%E5%80%8Bpackage/"/>
      <url>/2019/07/08/Laravel-%E7%AC%AC%E4%B8%80%E5%80%8Bpackage/</url>
      
        <content type="html"><![CDATA[<h2 id="User-Story"><a href="#User-Story" class="headerlink" title="User Story"></a>User Story</h2><p>我是一個網站管理者，我希望我的文章容易被看見，提升網站流量.</p><h2 id="公司專案推廣AMP"><a href="#公司專案推廣AMP" class="headerlink" title="公司專案推廣AMP"></a>公司專案推廣AMP</h2><ul><li>需求 : 將原有文章HTML格式轉換成支援AMP的格式.</li><li>實作 : 後台寫支Helper，儲存同時儲存一份AMP格式.</li><li>目標 : Helper 抽成package.</li></ul><h2 id="這是第一個package"><a href="#這是第一個package" class="headerlink" title="這是第一個package"></a>這是第一個package</h2><p>More info: <a href="https://medium.com/@jerichen/laravel-5-7-%E7%AC%AC%E4%B8%80%E5%80%8Bpackage-285ce963ae45" target="_blank" rel="noopener">Medium</a></p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="開一個Laravel-5-7專案"><a href="#開一個Laravel-5-7專案" class="headerlink" title="開一個Laravel 5.7專案"></a>開一個Laravel 5.7專案</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ composer create-project laravel/laravel laravel-convert-html-to-amp</span><br></pre></td></tr></table></figure><h3 id="建立packages-foler"><a href="#建立packages-foler" class="headerlink" title="建立packages foler"></a>建立packages foler</h3><img src="https://cdn-images-1.medium.com/max/1600/1*XfJqGm1i19KMn6bTANl0KQ.png" class="[class names]"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/packages/[開發商名]/[套件名]/src</span><br><span class="line">/packages/jerichen/amp/src</span><br></pre></td></tr></table></figure><h3 id="建立composer-json"><a href="#建立composer-json" class="headerlink" title="建立composer.json"></a>建立composer.json</h3><img src="https://cdn-images-1.medium.com/max/1600/1*Hu8r-NLaO59Xwj8W5QHLsg.png" class="[class names]"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /packages/jerichen/amp</span><br><span class="line">$ composer init</span><br></pre></td></tr></table></figure><h3 id="專案目錄composer-json-psr-4"><a href="#專案目錄composer-json-psr-4" class="headerlink" title="專案目錄composer.json psr-4"></a>專案目錄composer.json psr-4</h3><p>[加入新的namespace : Jerichen\Amp]</p><img src="https://cdn-images-1.medium.com/max/1600/1*AbnCno-TothlmSv7xF_tDQ.png" class="[class names]"><h3 id="專案目錄下產生新的autoload檔案"><a href="#專案目錄下產生新的autoload檔案" class="headerlink" title="專案目錄下產生新的autoload檔案"></a>專案目錄下產生新的autoload檔案</h3><img src="https://cdn-images-1.medium.com/max/1600/1*UWETc9ttY-pASfZ1Znl5IA.png" class="[class names]" title="### 在src建立Article.php {% img [class names] https://cdn-images-1.medium.com/max/1600/1*CUiBcVy5048EZ0Ue4YghVQ.png"><h3 id="建立測試，並在app-routes-web-php-新增route"><a href="#建立測試，並在app-routes-web-php-新增route" class="headerlink" title="建立測試，並在app/routes/web.php 新增route"></a>建立測試，並在app/routes/web.php 新增route</h3><img src="https://cdn-images-1.medium.com/max/1600/1*Hq8ZvWLYSI2AcCpbKUhEow.png" class="[class names]"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">use Jerichen\Amp\Article;</span><br><span class="line"></span><br><span class="line">Route::get(<span class="string">'article'</span>, <span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">    <span class="variable">$article</span> = new Article();</span><br><span class="line">    <span class="built_in">return</span> <span class="variable">$article</span>-&gt;result();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">Route::get(<span class="string">'article'</span>, <span class="string">'ArticleController@index'</span>);</span><br></pre></td></tr></table></figure><h3 id="上傳到github"><a href="#上傳到github" class="headerlink" title="上傳到github"></a>上傳到github</h3><img src="https://cdn-images-1.medium.com/max/1600/1*8Cta4ZWiGYfdHjkGz3yztw.png" class="[class names]"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/jerichen/laravel-convert-html-to-amp</span><br><span class="line"></span><br><span class="line">接著在amp資料夾下建立git</span><br><span class="line">git init</span><br><span class="line">.........</span><br><span class="line">.........</span><br><span class="line">略</span><br><span class="line"></span><br><span class="line">請一定要記得下tag，並且在之後所有push的版本都加上tag，</span><br><span class="line">這樣packagist才有依據要抓哪一個版本的程式碼給使用者</span><br><span class="line"></span><br><span class="line">git tag -a tag_name -m <span class="string">"First version"</span></span><br><span class="line">git push --tags</span><br><span class="line"></span><br><span class="line">移除tag</span><br><span class="line">git push --delete origin tag_name</span><br></pre></td></tr></table></figure><h3 id="上傳到packagist"><a href="#上傳到packagist" class="headerlink" title="上傳到packagist"></a>上傳到packagist</h3><img src="https://cdn-images-1.medium.com/max/1600/1*rI0XHV4U7D4TxiAOPMwtxg.png" class="[class names]"><p><a href="https://packagist.org/packages/jerichen/laravel-convert-html-to-amp" target="_blank" rel="noopener">Packagist</a></p><p><br><br></p>]]></content>
      
      
      
        <tags>
            
            <tag> Laravel </tag>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
